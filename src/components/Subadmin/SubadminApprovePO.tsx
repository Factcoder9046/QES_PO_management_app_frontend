import { useEffect, useState } from 'react'
import { fetchAllOrders } from '../../utils/api'
import { formatDate } from '../User/components/UserEditPO'
import { BeatLoader } from 'react-spinners'

const SubadminApprovePO = () => {
    const [orders, setOrders] = useState([])
    const [page, setPage] = useState(1)
    const [totalPages, setTotalPages] = useState(1)
    const limit = 10
    const [laoding, setLaoding] = useState(false)

    useEffect(() => {
        const loadOrders = async () => {
            setLaoding(true)
            try {
                const { orders, pagination } = await fetchAllOrders(page, limit)
                setOrders(orders)
                setTotalPages(pagination.totalPages)
                setLaoding(false)
            } catch (error) {
                console.log(error, "Error fetching orders........")
                setLaoding(false)
            }
        }
        loadOrders()
    }, [page])

    const handlePrev = () => setPage((prev) => Math.max(prev - 1, 1))
    const handleNext = () => setPage((prev) => Math.min(prev + 1, totalPages))
    const handlePageClick = (num: number) => setPage(num)




    return (
        <div className='flex flex-col gap-6 justify-start items-center size-full'>
            <h1 className='text-2xl font-bold'>PO Approvals</h1>

            {laoding === false
                ?
                <>
                    {/* Desktop Table */}
                    <div className='w-full hidden lg:table'>
                        <table className='w-full mb-6'>
                            <thead className='bg-gray-200 text-black font-bold'>
                                <tr>
                                    <td className='py-2 uppercase text-start px-2'>Order Number</td>
                                    <td className='py-2 uppercase text-start px-2'>Generated By</td>
                                    <td className='py-2 uppercase text-start px-2'>Creation Date</td>
                                    <td className='py-2 uppercase text-start px-2'>Status</td>
                                    <td className='py-2 uppercase text-end px-2'>Action</td>
                                </tr>
                            </thead>
                            <tbody>
                                {orders.map((order: any, index: number) => (
                                    <tr key={index}>
                                        <td className='py-2 text-start px-2 text-blue-500 font-semibold'>{order.orderNumber}</td>
                                        <td className='py-2 text-start px-2'>{order.generatedBy.username}</td>
                                        <td className='py-2 text-start px-2'>
                                            {order.orderdate ? formatDate(order.orderDate) : formatDate(order.createdAt)}
                                        </td>
                                        <td className='py-2 text-start px-2'>
                                            <select

                                                className={`font-semibold uppercase text-xs tracking-wider rounded-full px-2 py-1
                    ${order.status === "completed" && "bg-green-100 text-green-600"}
                    ${order.status === "pending" && "bg-yellow-100 text-yellow-600"}
                    ${order.status === "delayed" && "bg-orange-100 text-orange-600"}
                    ${order.status === "rejected" && "bg-red-100 text-red-600"}
                    `}>
                                                <option selected>{order.status}</option>
                                                {order.status !== 'pending' && <option>Pending</option>}
                                                {order.status !== 'completed' && <option>Completed</option>}
                                                {order.status !== 'delayed' && <option>Delayed</option>}
                                                {order.status !== 'rejected' && <option>Rejected</option>}
                                            </select>
                                        </td>
                                        <td className='py-2 text-end px-2'>
                                            <button className='bg-blue-500 px-2 py-1 text-white font-semibold rounded-lg'>Submit</button>
                                        </td>
                                    </tr>
                                ))}
                            </tbody>
                        </table>
                    </div>

                    {/* Mobile Cards */}
                    <div className='w-full flex flex-col gap-4 lg:hidden'>
                        {orders.map((order: any, index: number) => (
                            <div key={index} className='bg-white dark:bg-zinc-800 shadow-md rounded-lg p-4 flex flex-col gap-2'>
                                <div className='flex justify-between'>
                                    <span className='font-semibold'>Order Number:</span>
                                    <span className='text-end'>{order.orderNumber}</span>
                                </div>
                                <div className='flex justify-between'>
                                    <span className='font-semibold'>Generated By:</span>
                                    <span className='text-end'>{order.generatedBy.username}</span>
                                </div>
                                <div className='flex justify-between'>
                                    <span className='font-semibold'>Creation Date:</span>
                                    <span className='text-end'>{order.orderdate ? formatDate(order.orderDate) : formatDate(order.createdAt)}</span>
                                </div>
                                <div className='flex justify-between'>
                                    <span className='font-semibold'>Status:</span>
                                    <select className='text-end'>
                                        <option>Pending</option>
                                        <option>Completed</option>
                                        <option>Delayed</option>
                                        <option>Rejected</option>
                                    </select>
                                </div>
                                <div className='flex justify-end'>
                                    <button className='bg-blue-500 px-3 py-1 text-white font-semibold rounded-lg mt-2'>Submit</button>
                                </div>
                            </div>
                        ))}
                    </div>

                    {/* Pagination Controls */}
                    <div className="flex justify-center items-center gap-2 mt-4">
                        <button
                            onClick={handlePrev}
                            disabled={page === 1}
                            className='px-3 py-1 bg-gray-300 disabled:opacity-50 rounded'
                        >
                            Prev
                        </button>
                        {[...Array(totalPages)].map((_, idx) => {
                            const pageNum = idx + 1
                            return (
                                <button
                                    key={pageNum}
                                    onClick={() => handlePageClick(pageNum)}
                                    className={`px-3 py-1 rounded ${page === pageNum ? 'bg-blue-500 text-white' : 'bg-gray-200'}`}
                                >
                                    {pageNum}
                                </button>
                            )
                        })}
                        <button
                            onClick={handleNext}
                            disabled={page === totalPages}
                            className='px-3 py-1 bg-gray-300 disabled:opacity-50 rounded'
                        >
                            Next
                        </button>
                    </div>
                </>
                : <BeatLoader />
            }


        </div>
    )
}

export default SubadminApprovePO

// 
